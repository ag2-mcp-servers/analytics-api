# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T18:49:45+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class ErrorParameter(BaseModel):
    name: Optional[str] = Field(None, description='The object of the error.')
    value: Optional[str] = Field(None, description='The value of the object.')


class Rate(BaseModel):
    limit: Optional[int] = Field(
        None,
        description='The maximum number of requests that can be made to this resource during a set time period. The length of time to which the limit is applied is defined by the associated <b>timeWindow</b> value.  <br><br>This value is often referred to as the "call quota" for the resource.',
    )
    remaining: Optional[int] = Field(
        None,
        description='The remaining number of requests that can be made to this resource before the associated time window resets.',
    )
    reset: Optional[str] = Field(
        None,
        description='The data and time the time window and accumulated calls for this resource reset.  <br><br>When the <b>reset</b> time is reached, the <b>remaining</b> value is reset to the value of <b>limit</b>, and this <b>reset</b> value is reset to the current time plus the number of seconds defined by the <b>timeWindow</b> value. <br><br>The time stamp is formatted as an <a href="http://www.iso.org/iso/home/standards/iso8601.htm " target="_blank">ISO 8601</a> string, which is based on the 24-hour Universal Coordinated Time (UTC) clock. <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br><b>Example:</b> <code>2018-08-04T07:09:00.000Z</code>',
    )
    timeWindow: Optional[int] = Field(
        None,
        description='A period of time, expressed in seconds. The call quota for a resource is applied to the period of time defined by the value of this field.',
    )


class Resource(BaseModel):
    name: Optional[str] = Field(
        None,
        description='The name of the resource (an API or an API method) to which the rate-limit data applies.',
    )
    rates: Optional[List[Rate]] = Field(
        None,
        description='A list of rate-limit data, where each list element represents the rate-limit data for a specific resource.',
    )


class Error(BaseModel):
    category: Optional[str] = Field(None, description='Identifies the type of erro.')
    domain: Optional[str] = Field(
        None,
        description='Name for the primary system where the error occurred. This is relevant for application errors.',
    )
    errorId: Optional[int] = Field(
        None, description='A unique number to identify the error.'
    )
    inputRefIds: Optional[List[str]] = Field(
        None,
        description='An array of request elements most closely associated to the error.',
    )
    longMessage: Optional[str] = Field(
        None, description='A more detailed explanation of the error.'
    )
    message: Optional[str] = Field(
        None,
        description="Information on how to correct the problem, in the end user's terms and language where applicable.",
    )
    outputRefIds: Optional[List[str]] = Field(
        None,
        description='An array of request elements most closely associated to the error.',
    )
    parameters: Optional[List[ErrorParameter]] = Field(
        None,
        description='An array of name/value pairs that describe details the error condition. These are useful when multiple errors are returned.',
    )
    subdomain: Optional[str] = Field(
        None,
        description='Further helps indicate which subsystem the error is coming from. System subcategories include: Initialization, Serialization, Security, Monitoring, Rate Limiting, etc.',
    )


class RateLimit(BaseModel):
    apiContext: Optional[str] = Field(
        None,
        description='The context of the API for which rate-limit data is returned. For example <code>buy</code>, <code>sell</code>, <code>commerce</code>, <code>developer</code> or <code>tradingapi</code>.',
    )
    apiName: Optional[str] = Field(
        None,
        description='The name of the API for which rate-limit data is returned. For example <code>browse</code> for the Buy API, <code>inventory</code> for the Sell API, <code>taxonomy</code> for the Commerce API, or <code>tradingapi</code> for Trading API.',
    )
    apiVersion: Optional[str] = Field(
        None,
        description='The version of the API for which rate-limit data is returned. For example <code>v1</code> or <code>v2</code>.',
    )
    resources: Optional[List[Resource]] = Field(
        None,
        description='A list of the methods for which rate-limit data is returned. For example <code>item</code> for the Feed API, <code>getOrder</code> for the Fulfillment API, <code>getProduct</code> for the Catalog API, <code>AddItems</code> for the Trading API.',
    )


class RateLimitsResponse(BaseModel):
    rateLimits: Optional[List[RateLimit]] = Field(
        None,
        description='The rate-limit data for the specified APIs. The rate-limit data is returned for all the methods in the specified APIs and data pertains to the current time window.',
    )
